{
    "benchmarks.time_ia_speed": {
        "code": "def time_ia_speed(nn=128, scale=0.1):\n    '''\n        Times the time taken to apply an IA shear to a 128x128 pixel\n        image and compares it with the time required to apply an\n        affine shear.\n    '''\n    # initialise a galaxy object\n    gal = galsim.Sersic(n=1.5, half_light_radius=1.5, flux=40)\n\n    # start timing for ia transform\n    ia_start = time.time()\n\n    # crete stamp, apply transform, and sample gal obj\n    ia_stamp = batstamp.Stamp(nn=nn, scale=scale)\n    ia = batforms.IaTransform(scale=scale, hlr=1.5, phi=0.2)\n    ia_stamp.transform_grids(ia)\n    ia_gal = ia_stamp.sample_galaxy(gal)\n\n    # stop timing\n    ia_end = time.time()\n    ia_time = ia_end - ia_start\n\n    # get equivalent shear at hlr to pass to lens transform\n    g1, g2 = ia.get_g1g2(1.5,0)\n\n    # start timing for lens\n    aff_start = time.time()\n\n    # crete stamp, apply transform, and sample gal obj\n    lens_stamp = batstamp.Stamp(nn=nn, scale=scale)\n    lens = batforms.LensTransform(gamma1=g1, gamma2=g2, kappa=0)\n    lens_stamp.transform_grids(lens)\n    lens_gal = lens_stamp.sample_galaxy(gal)\n\n    # stop timing\n    aff_end = time.time()\n    aff_time = aff_end - aff_start\n\n    return {'IA time' : ia_time, 'Lens time' : aff_time}",
        "min_run_count": 2,
        "name": "benchmarks.time_ia_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2ff35b17d757654eb51b61f52da6d1febbf65e4037633904b919348ea108cb3c",
        "warmup_time": -1
    },
    "benchmarks.time_shear_speed": {
        "code": "def time_shear_speed(nn=64, scale=0.2):\n\n    # create galaxy\n    gal = galsim.Sersic(n=1.5, half_light_radius=1.5, flux=40)\n\n    # start timing for batsim\n    start = time.time()\n\n    # generate stamp, shear and sample\n    gal_stamp = batstamp.Stamp(nn=nn, scale=scale, centering='galsim')\n    lens = batforms.LensTransform(gamma1=0.2, gamma2=0, kappa=0,\n                                  center=[-0.5*0.2, -0.5*0.2])\n    gal_stamp.transform_grids(lens)\n    bat_array = gal_stamp.sample_galaxy(gal)\n\n    end = time.time()\n\n    bat_time = end-start\n\n    # start timing for galsim\n    start = time.time()\n\n    gal_shear = gal.shear(g1=0.2)\n    gal_array = gal_shear.drawImage(nx=nn, ny=nn, scale=scale).array\n\n    end = time.time()\n\n    gal_time = end-start\n\n    return {'batsim time': bat_time, 'galsim time' : gal_time}",
        "min_run_count": 2,
        "name": "benchmarks.time_shear_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0324147e1ee5bfef12e985254c4d622730e76cebcea793819769dbc489202912",
        "warmup_time": -1
    },
    "version": 2
}